# Copyright(C) 2019 - 2020 Håkan Sidenvall <ekcoh.git@gmail.com>.
# This file is subject to the license terms in the LICENSE file found in the 
# root directory of this distribution.

# Add benchmark executable
set(BENCHMARK_TARGET ${PROJECT_NAME}_example_01_getting_started)
add_executable(${BENCHMARK_TARGET} 
   "main.cpp"
)

# Link to Google Benchmark
target_link_libraries(${BENCHMARK_TARGET}
	PRIVATE benchmark
)

# Benchmark target depends on generator
add_dependencies(${BENCHMARK_TARGET} ${PROJECT_NAME})



# Tell CMake how to generate benchmark JSON result and setup dependencies
#add_custom_command(
#	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/benchmark.json
#	COMMAND $<TARGET_FILE:${BENCHMARK_TARGET}> 
#	      --benchmark_counters_tabular=true 
#			--benchmark_format=console 
#			--benchmark_out=benchmark.json
#			--benchmark_out_format=json
#	DEPENDS ${BENCHMARK_TARGET}
#	WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
#	VERBATIM
#)

gb2gc_add_benchmark(
   TARGET ${BENCHMARK_TARGET} 
   OUTPUT mybenchmark.json)

# Tell CMake how to generate HTML chart from JSON result and setup dependencies
#add_custom_command(
#	OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/benchmark.html
#	COMMAND $<TARGET_FILE:${PROJECT_NAME}> 
#		-c bar
#		-i "${CMAKE_CURRENT_BINARY_DIR}/benchmark.json"
#		-o "${CMAKE_CURRENT_BINARY_DIR}/benchmark.html"
#		-t "Benchmark Example 01 - memcpy vs. memmove for different data sizes"
#		-w 1100
#		-h 900
#		-y "Time (nanoseconds)"
#		-l right
#	DEPENDS 
#		${PROJECT_NAME} 
#		${CMAKE_CURRENT_BINARY_DIR}/benchmark.json
#	WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
#	VERBATIM
#)

# Add target to run benchmark
#add_custom_target(${BENCHMARK_TARGET}_run
#	COMMAND ${CMAKE_COMMAND} -E echo "Running benchmark..."
#	DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/benchmark.json
#	VERBATIM
#)

# Add target to generate chart
#add_custom_target(${BENCHMARK_TARGET}_chart
#	COMMAND ${CMAKE_COMMAND} -E echo "Generating chart..."
#	DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/benchmark.html 
#	VERBATIM
#)
